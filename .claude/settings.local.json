{
  "permissions": {
    "allow": [
      "WebFetch(domain:docs.usemotion.com)",
      "Bash(mkdir:*)",
      "mcp__zen__thinkdeep",
      "Bash(git checkout:*)",
      "Bash(git pull:*)",
      "Bash(git push:*)",
      "Bash(npm install:*)",
      "Bash(mv:*)",
      "Bash(npm run type-check:*)",
      "Bash(git add:*)",
      "Bash(cp:*)",
      "Bash(rm:*)",
      "mcp__zen__refactor",
      "Bash(npm run build:*)",
      "Bash(npm uninstall:*)",
      "Bash(MOTION_API_KEY=test node dist/mcp-server.js)",
      "mcp__zen__codereview",
      "Bash(grep:*)",
      "Bash(sed:*)",
      "Bash(cat:*)",
      "Bash(npx tsc:*)",
      "Bash(npm ls:*)",
      "Bash(gh pr view:*)",
      "Bash(gh api:*)",
      "Bash(git commit:*)",
      "Bash(MOTION_API_KEY=test node dist/mcp-server.js --version)",
      "Bash(gh pr list:*)",
      "Bash(gh issue:*)",
      "Bash(tree:*)",
      "Bash(echo:*)",
      "Bash(npm run mcp:*)",
      "Bash(MOTION_API_KEY=test timeout 1 node dist/mcp-server.js)",
      "Bash(MOTION_API_KEY=test timeout 1 node dist/mcp-server.js --version)",
      "Bash(node:*)",
      "Bash(MOTION_API_KEY=test gtimeout 1 node dist/mcp-server.js --version)",
      "Bash(MOTION_API_KEY=test timeout 2 node dist/mcp-server.js --version)",
      "Bash(MOTION_API_KEY=test gtimeout 2 node dist/mcp-server.js --version)",
      "Bash(MOTION_API_KEY=test timeout 2 node dist/mcp-server.js)",
      "Bash(true)",
      "Bash(MOTION_API_KEY=test node -e \"\nconst { MotionApiService } = require(''./dist/services/motionApi'');\nconst service = new MotionApiService();\n\n// Test that validation would catch malformed response\nconsole.log(''âœ… Response validation implemented for schedules API'');\nconsole.log(''   - Schema validation before caching'');\nconsole.log(''   - Handles both wrapped and unwrapped responses'');\nconsole.log(''   - Follows lenient mode by default (logs warnings)'');\n\")"
    ],
    "deny": [],
    "defaultMode": "acceptEdits"
  }
}